[{"C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\index.js":"1","C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\App.js":"2","C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\reportWebVitals.js":"3","C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\Jobs.js":"4","C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\Job.js":"5","C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\JobModal.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":678,"mtime":1615052569200,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2476,"mtime":1614745496166,"results":"11","hashOfConfig":"8"},{"size":593,"mtime":1614745741364,"results":"12","hashOfConfig":"8"},{"size":1752,"mtime":1614746849380,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xnfxwb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\index.js",[],["31","32"],"C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\App.js",["33"],"import fetch from 'node-fetch';\r\nimport React from 'react';\r\nimport './App.css';\r\nimport Jobs from './Jobs';\r\n\r\n\r\nconst JOB_API_URL = '/api/jobs';\r\n\r\nconst mockJobs = [\r\n\r\n  {title: 'SWE 1', company: 'Google'},\r\n  {title: 'SWE 1', company: 'Apple'}\r\n\r\n]\r\n\r\n\r\nasync function fetchJobs (updateCb){\r\n  const res = await fetch(JOB_API_URL);\r\n  const json = await res.json();\r\n\r\n  updateCb(json);\r\n\r\n  console.log({json});\r\n} \r\n\r\n\r\nfunction App() {\r\n\r\n  const [jobList, updateJobs] = React.useState([]);\r\n\r\nReact.useEffect(()=>{\r\n  fetchJobs(updateJobs);\r\n}, [])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Jobs jobs={jobList}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\reportWebVitals.js",[],"C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\Jobs.js",["34","35"],"import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogueTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialogue from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nimport Job from \"./Job\";\r\nimport JobModal from \"./JobModal\";\r\n\r\nexport default function Jobs({ jobs }) {\r\n\r\n\r\n//Modal\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedJob, selectJob] = React.useState({});\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n//Pagination\r\n  const jobsPerPage = 20; \r\n  const numJobs = jobs.length; \r\n  const numPages = Math.floor(numJobs / jobsPerPage);\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const jobsOnPage = jobs.slice(activeStep*jobsPerPage, (activeStep*jobsPerPage)+jobsPerPage);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"jobs\">\r\n        <JobModal open ={open} job = {selectedJob} handleClose = {handleClose}></JobModal>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n        Entry Level Job Searcher\r\n      </Typography>\r\n      <Typography variant=\"h6\">\r\n          Found {numJobs} Jobs\r\n      </Typography>\r\n      {\r\n      \r\n      \r\n      jobsOnPage.map(\r\n          (job, i) => (<Job key = {i} job={job} onClick = {() => {\r\n            handleClickOpen();\r\n            selectJob(job) \r\n          }}/>\r\n      ))\r\n      \r\n      }\r\n      <div>\r\n          Page {activeStep+1} of {numPages}\r\n      </div>\r\n\r\n      <MobileStepper\r\n        variant=\"progress\"\r\n        steps={numPages}\r\n        position=\"static\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === numPages-1}>\r\n            Next\r\n            <KeyboardArrowRight />\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            <KeyboardArrowLeft />\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\Job.js",[],"C:\\Users\\conbo\\Desktop\\Files\\Projects\\JobSearch\\client\\src\\JobModal.js",["36","37"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function JobModal({job, open, handleClose}) {\r\n\r\n    if(!job.title){\r\n        return <div></div>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">\r\n              {job.title} - \r\n               {job.company}\r\n              <img className = {'detail-logo'} src = {job.company_logo} />\r\n            </DialogTitle>\r\n              \r\n          <DialogContent>\r\n            <DialogContentText dangerouslySetInnerHTML={{__html: job.description}} id=\"alert-dialog-slide-description\"/>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n            <a href = {job.url} target =\"_blank\">\r\n                <Button color=\"primary\">\r\n                Apply\r\n                </Button>\r\n            </a>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }",["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":9,"column":7,"nodeType":"46","messageId":"47","endLine":9,"endColumn":15},{"ruleId":"44","severity":1,"message":"48","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":21},{"ruleId":"44","severity":1,"message":"49","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":16},{"ruleId":"50","severity":1,"message":"51","line":33,"column":15,"nodeType":"52","endLine":33,"endColumn":75},{"ruleId":"53","severity":1,"message":"54","line":43,"column":13,"nodeType":"52","endLine":43,"endColumn":50},{"ruleId":"40","replacedBy":"55"},{"ruleId":"42","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'mockJobs' is assigned a value but never used.","Identifier","unusedVar","'DialogueTitle' is defined but never used.","'Dialogue' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["57"],["58"],"no-global-assign","no-unsafe-negation"]